spring.application.name= currency-exchange
server.port =8000
spring.config.import = optional:configserver:http://localhost:8888
spring.jpa.show-sql=true
#localhost replace mysqldb when running local
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/spring-boot
#compose
#spring.datasource.url=jdbc:mysql://mysql:latest:3308/spring-boot

spring.datasource.url=jdbc:mysql://localhost:3306/spring-boot
spring.datasource.username=root
spring.datasource.password=admin
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.hibernate.ddl-auto = none
spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect


#eureka.client.serviceUrl.defaultZone = http://eureka-service:8761/eureka

eureka.client.serviceUrl.defaultZone = http://host.docker.internal:8761/eureka

resilience4j.retry.instances.sample-api.max-attempts=5

resilience4j.bulkhead.instances.sample-api.max-wait-duration=2

management.tracing.sampling.probability =1.0
logging.pattern.level= %5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]

#resilience4j.bulkhead.instances.sample-api.enableExponentialBackoff=true

#https://www.javadevjournal.com/spring-boot/loading-initial-data-with-spring-boot/
